<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="site.exception.portal.dao.ICategoryDao">
	<cache />
	<resultMap id="BaseResultMap" type="site.exception.portal.model.vo.CategoryVo">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
		<result column="create_user_id" property="createUserId"
			jdbcType="INTEGER" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />

		<!-- 业务字段 -->
		<result column="nums" property="nums" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		id, name, create_time, update_time, create_user_id, remark
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from t_category
		where id = #{id,jdbcType=INTEGER}
	</select>
	<select id="getArticleNumByCreateUserId" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select t.*, COUNT(category) nums from
		(SELECT a.category,c.name,c.id from t_article a
		left join t_category c on a.category = c.id
		where c.create_user_id = #{create_user_id,jdbcType=INTEGER}) t GROUP BY
		category
	</select>
	<select id="getByCreateUserId" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		SELECT id, name FROM t_category WHERE create_user_id =
		#{create_user_id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from t_category
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="site.exception.portal.model.Category">
		insert into t_category (id, name, create_time,
		update_time, create_user_id, remark
		)
		values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR},
		#{createTime,jdbcType=TIMESTAMP},
		#{updateTime,jdbcType=TIMESTAMP}, #{createUserId,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}
		)
	</insert>
	<insert id="insertSelective" parameterType="site.exception.portal.model.Category">
		insert into t_category
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
			<if test="createUserId != null">
				create_user_id,
			</if>
			<if test="remark != null">
				remark,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createUserId != null">
				#{createUserId,jdbcType=INTEGER},
			</if>
			<if test="remark != null">
				#{remark,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="site.exception.portal.model.Category">
		update t_category
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createUserId != null">
				create_user_id = #{createUserId,jdbcType=INTEGER},
			</if>
			<if test="remark != null">
				remark = #{remark,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="site.exception.portal.model.Category">
		update t_category
		set name = #{name,jdbcType=VARCHAR},
		create_time = #{createTime,jdbcType=TIMESTAMP},
		update_time = #{updateTime,jdbcType=TIMESTAMP},
		create_user_id = #{createUserId,jdbcType=INTEGER},
		remark = #{remark,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>